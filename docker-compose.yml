services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pettrack
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  user-pet-service:
    container_name: user_pet_service
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./user-service/.env
    volumes:
      - ./user-service/uploads:/app/user-service/uploads
    depends_on:
      - postgres
    restart: always

  location-service:
    container_name: location_service
    build:
      context: ./location-service
      dockerfile: Dockerfile
    env_file:
      - ./location-service/.env
    depends_on:
      - postgres
    restart: always

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok_service
    restart: always
    environment:
      - NGROK_AUTHTOKEN=341Qw6gaogcj89oHBRMsSomD923_41B4RXmcGb4aAiPuHSyH8 # <-- ใส่ Authtoken ของคุณ
    command: http location-service:5000

  frontend:
    container_name: frontend_app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - user-pet-service
      - location-service
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always

  # --- เพิ่ม Jenkins Service ---
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    ports:
      - "8081:8080"  # เข้า Jenkins ผ่านพอร์ต 8081 (เพราะ 8080 ถูกใช้แล้ว)
      - "50000:50000" # สำหรับเชื่อมต่อกับ Agent
    volumes:
      - jenkins_home:/var/jenkins_home

  # --- เพิ่ม Grafana Service ---
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: always
    ports:
      - "3001:3000" # เข้า Grafana ผ่านพอร์ต 3001 (เพราะ 3000 ถูกใช้แล้ว)
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    depends_on:
      - prometheus

volumes:
  postgres_data:
  jenkins_home:   # <-- เพิ่ม Volume สำหรับ Jenkins
  grafana_data:   # <-- เพิ่ม Volume สำหรับ Grafana